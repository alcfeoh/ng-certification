{"ast":null,"code":"import _toConsumableArray from \"D:\\\\source\\\\angular-cert-weather-greg\\\\ng-certification\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\toConsumableArray.js\";\nimport _classCallCheck from \"D:\\\\source\\\\angular-cert-weather-greg\\\\ng-certification\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"D:\\\\source\\\\angular-cert-weather-greg\\\\ng-certification\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/weather.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\n\nfunction ForecastComponent_li_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"date\");\n    i0.ɵɵelement(3, \"img\", 8);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var item_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate3(\" \", i0.ɵɵpipeBind1(2, 3, item_r1.temperatureDate), \" \", item_r1.main, \" - Min: \", item_r1.min, \" - Max: 59 \");\n  }\n}\n\nexport var ForecastComponent = /*#__PURE__*/(function () {\n  var ForecastComponent = /*#__PURE__*/function () {\n    function ForecastComponent(weatherService, route) {\n      _classCallCheck(this, ForecastComponent);\n\n      this.weatherService = weatherService;\n      this.route = route;\n      this.fiveDayForecast = new Array();\n    }\n\n    _createClass(ForecastComponent, [{\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        var _this = this;\n\n        this.zipCode = this.route.snapshot.paramMap.get('zipCode');\n        this.weatherService.getForecastForZipCode(this.zipCode).subscribe({\n          next: function next(response) {\n            _this.forecastForZipCode = response;\n\n            var next5days = _toConsumableArray(new Set(response.list.map(function (r) {\n              return r.dt_txt.substring(0, 10);\n            }))).splice(0);\n\n            next5days.forEach(function (day) {\n              var dailyData = response.list.find(function (d) {\n                return d.dt_txt.substring(0, 10) === day;\n              });\n\n              _this.fiveDayForecast.push({\n                temperatureDate: dailyData === null || dailyData === void 0 ? void 0 : dailyData.dt_txt,\n                main: dailyData === null || dailyData === void 0 ? void 0 : dailyData.weather[0].main,\n                temp_min: dailyData === null || dailyData === void 0 ? void 0 : dailyData.main.temp_min,\n                temp_max: dailyData === null || dailyData === void 0 ? void 0 : dailyData.main.temp_max,\n                imageName: _this.setImageName(dailyData === null || dailyData === void 0 ? void 0 : dailyData.weather[0].main)\n              });\n            });\n          }\n        });\n      }\n    }, {\n      key: \"setImageName\",\n      value: function setImageName(currentConditions) {\n        return this.weatherService.getImageName(currentConditions);\n      }\n    }]);\n\n    return ForecastComponent;\n  }();\n\n  ForecastComponent.ɵfac = function ForecastComponent_Factory(t) {\n    return new (t || ForecastComponent)(i0.ɵɵdirectiveInject(i1.WeatherService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n  };\n\n  ForecastComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ForecastComponent,\n    selectors: [[\"app-forecast\"]],\n    decls: 21,\n    vars: 2,\n    consts: [[1, \"container-fluid\"], [1, \"panel\", \"panel-default\"], [1, \"panel-heading\"], [1, \"panel-title\"], [1, \"list-group\"], [\"class\", \"list-group-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"list-group-item\"], [\"src\", \"https://www.angulartraining.com/images/weather/sun.png\", 1, \"icon\"], [\"src\", \"https://www.angulartraining.com/images/weather/rain.png\", 1, \"icon\"], [\"src\", \"https://www.angulartraining.com/images/weather/clouds.png\", 1, \"icon\"], [\"src\", \"https://www.angulartraining.com/images/weather/snow.png\", 1, \"icon\"], [\"tabindex\", \"0\", \"id\", \"mainPageBtn\", 1, \"btn\", \"btn-success\"]],\n    template: function ForecastComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"h3\", 3);\n        i0.ɵɵtext(4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"ul\", 4);\n        i0.ɵɵtemplate(6, ForecastComponent_li_6_Template, 4, 5, \"li\", 5);\n        i0.ɵɵelementStart(7, \"li\", 6);\n        i0.ɵɵtext(8, \" Tuesday, Mar 24: Rain - Min: 39 - Max: 52 \");\n        i0.ɵɵelement(9, \"img\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"li\", 6);\n        i0.ɵɵtext(11, \" Wednesday, Mar 25: Rain - Min: 36 - Max: 54 \");\n        i0.ɵɵelement(12, \"img\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"li\", 6);\n        i0.ɵɵtext(14, \" Thursday, Mar 26: Clear - Min: 37 - Max: 56 \");\n        i0.ɵɵelement(15, \"img\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"li\", 6);\n        i0.ɵɵtext(17, \" Friday, Mar 27: Clear - Min: 40 - Max: 57 \");\n        i0.ɵɵelement(18, \"img\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"button\", 11);\n        i0.ɵɵtext(20, \"< Back to main page\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\"5-day forecast for \", ctx.forecastForZipCode.city == null ? null : ctx.forecastForZipCode.city.name, \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.fiveDayForecast);\n      }\n    },\n    directives: [i3.NgForOf],\n    pipes: [i3.DatePipe],\n    styles: [\"\"]\n  });\n  return ForecastComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}